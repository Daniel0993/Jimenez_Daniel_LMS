/** 
 * Daniel Jimenez 
 * 202410 Software Development I CEN-3024C-14835 
 * 09/06/2023 
 * 
 * Class: LibraryManagementSystem 
 * Description: This class contains the main method and serves as the entry point for the program. 
 * It orchestrates the overall program objectives, including the management of the library's book collection. 
 */ 
public class LibraryManagementSystem { 
    public static void main(String[] args) { 
        // Program logic and execution start here 
 
        // Create a LibraryCollection instance to manage books 
        LibraryCollection libraryCollection = new LibraryCollection(); 
 
        // Create some Book instances 
        Book book1 = new Book(1, "The Great Gatsby", "F. Scott Fitzgerald"); 
        Book book2 = new Book(2, "To Kill a Mockingbird", "Harper Lee"); 
        Book book3 = new Book(3, "1984", "George Orwell"); 
 
        // Add books to the library collection 
        libraryCollection.addBook(book1); 
        libraryCollection.addBook(book2); 
        libraryCollection.addBook(book3); 
 
        // List all books in the collection 
        libraryCollection.listBooks(); 
 
        // Remove a book by its ID (e.g., remove book with ID 2) 
        libraryCollection.removeBook(2); 
 
        // List books again to see the updated collection 
        libraryCollection.listBooks(); 
    } 
} 

 

/** 
 * Daniel Jimenez 
 * 202410 Software Development I CEN-3024C-14835 
 * 09/06/2023 
 * 
 * Class: Book 
 * Description: This class represents a book in the library. It stores information such as the book's 
 * unique ID, title, and author. 
 */ 
public class Book { 
    // Instance variables 
    private int id; 
    private String title; 
    private String author; 
 
    // Constructor to initialize a book 
    public Book(int id, String title, String author) { 
        this.id = id; 
        this.title = title; 
        this.author = author; 
    } 
 
    // Getter for book ID 
    public int getId() { 
        return id; 
    } 
 
    // Getter for book title 
    public String getTitle() { 
        return title; 
    } 
 
    // Setter for book title 
    public void setTitle(String title) { 
        this.title = title; 
    } 
 
    // Getter for book author 
    public String getAuthor() { 
        return author; 
    } 
 
    // Setter for book author 
    public void setAuthor(String author) { 
        this.author = author; 
    } 
 
    /** 
     * Method: displayBookInfo 
     * Purpose: Display detailed information about the book. 
     * Arguments: None 
     * Return Value: None 
     */ 
    public void displayBookInfo() { 
        System.out.println("Book ID: " + id); 
        System.out.println("Title: " + title); 
        System.out.println("Author: " + author); 
    } 
} 

 

 

 

/** 
 * Daniel Jimenez 
 * 202410 Software Development I CEN-3024C-14835 
 *09/06/2023 
 * 
 * Class: LibraryCollection 
 * Description: This class manages the library's book collection. It provides methods for adding, removing, 
 * and listing books in the collection. 
 */ 
import java.util.ArrayList; 
import java.util.List; 
 
public class LibraryCollection { 
    private List<Book> books; 
 
    // Constructor to initialize the empty book collection 
    public LibraryCollection() { 
        this.books = new ArrayList<>(); 
    } 
 
    /** 
     * Method: addBook 
     * Purpose: Add a new book to the collection. 
     * Arguments: 
     * - book: The book object to be added. 
     * Return Value: None 
     */ 
    public void addBook(Book book) { 
        books.add(book); 
    } 
 
    /** 
     * Method: removeBook 
     * Purpose: Remove a book from the collection based on its unique ID. 
     * Arguments: 
     * - bookId: The ID of the book to be removed. 
     * Return Value: None 
     */ 
    public void removeBook(int bookId) { 
        // Find and remove the book with the given ID 
        for (Book book : books) { 
            if (book.getId() == bookId) { 
                books.remove(book); 
                return; // Exit the loop once the book is removed 
            } 
        } 
    } 
 
    /** 
     * Method: listBooks 
     * Purpose: List all books currently in the collection. 
     * Arguments: None 
     * Return Value: None 
     */ 
    public void listBooks() { 
        System.out.println("Books in the library collection:"); 
        for (Book book : books) { 
            book.displayBookInfo(); // Display book information using the Book class method 
        } 
    } 
} 
 
 
